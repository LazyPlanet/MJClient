ClickEvent = {}
ClickEvent.panelTable = {}
ClickEvent.panelTable._main_ui = "Login"
ClickEvent.panelTable._choose_ui = "MainMenu"
ClickEvent.panelTable._create_room_ui = "CreateRoom"
ClickEvent.panelTable._join_room_ui = "GetintoRoom"
ClickEvent.panelTable._other_message_ui = "OtherMessageUI"
ClickEvent.panelTable._player_message_ui = "PlayerMessageUI"
ClickEvent.panelTable._store_ui = "StoreUI"
ClickEvent.panelTable._play_game_ui = "PlayGameUI"
ClickEvent.uiPanel = nil

local operationState = Enum.CreateEnumTable({"WAIT", "PENG", "GANG", "CHI", "HU", "DAPAI"},-1)

local _currentPanel = {}
local _popPanel = {}

function ClickEvent.Awake( ... )
	-- body
	UIPackage.AddPackage("FairyUI/MXUI")
	ClickEvent.uiPanel = CS.UnityEngine.GameObject.Find("UIPanel"):GetComponent("UIPanel")
end
function ClickEvent.Start(loadUI)
	-- body
	CS.UnityEngine.Application.targetFrameRate = 60
	ClickEvent.uiPanel.ui:RemoveChildren()
	ClickEvent.CreateNewPanel(loadUI)
end

function ClickEvent.DeletePanel(deletePanel)
	-- body
	GRoot.inst:RemoveChild(deletePanel)
end

function ClickEvent.CreateNewPanel(panelName)
	-- body
	if not panelName and Player._invoke_data then
		panelName = Player._invoke_data
	end
	--[[
	local tempObj = CS.UnityEngine.Resources.Load("UIPrefab/"..panelName)
	_currentPanel.panel = CS.UnityEngine.Object.Instantiate(tempObj,ClickEvent.self.transform)
	_currentPanel.panel.transform.localScale = CS.UnityEngine.Vector3.one
	_currentPanel.eventTriggerListener = _currentPanel.panel:GetComponent("EventTriggerListener")
	_currentPanel.eventTriggerListener.onClick = ClickEvent.registerButtonClick
	_currentPanel.buttonList = _currentPanel.eventTriggerListener._buttons
	_currentPanel.toggleList = _currentPanel.eventTriggerListener._toggles
	--]]
	_currentPanel.panel = UIPackage.CreateObject("MXUI", panelName).asCom
	GRoot.inst:AddChild(_currentPanel.panel)
	local childNumber = _currentPanel.panel.numChildren
	for i=0,childNumber-1 do
		local obj = _currentPanel.panel:GetChildAt(i)
		obj.onClick:Add(ClickEvent.registerButtonClick)
	end
	--[[
	if panelName == ClickEvent.panelTable._play_game_ui then

		_currentPanel.roomIdText = _currentPanel.panel.transform:Find("RoomId").gameObject:GetComponent("Text")
		_currentPanel.roomIdText.text = tostring(Player._roomId)

		_currentPanel.starGameButton = 0
		_currentPanel.operationButton = {}
		_currentPanel.operationButton.gangButton = 1
		_currentPanel.operationButton.chiButton = 2
		_currentPanel.operationButton.pengButton = 3
		_currentPanel.operationButton.huButton = 4
		_currentPanel.operationButton.guoButton = 5
		for k,v in pairs(_currentPanel.operationButton) do
			_currentPanel.buttonList[v].gameObject:SetActive(false)
		end
	elseif panelName == ClickEvent.panelTable._choose_ui then
		_currentPanel.playerIdText = _currentPanel.panel.transform:Find("Player/PlayerIdShow"):GetComponent("Text")
		if Player._id then
			_currentPanel.playerIdText.text = tostring(Player._id)
		end
	end
	--]]
end

function ClickEvent.PaiOperationState()
	-- body
	local tempStateTable = Player.MahJong.GetStateTable()
    for k,v in pairs(tempStateTable) do
    	print(v)
		if v == "PAI_CHECK_RETURN_HU" then
			_currentPanel.buttonList[_currentPanel.operationButton.huButton].gameObject:SetActive(true)
	        _currentPanel.buttonList[_currentPanel.operationButton.guoButton].gameObject:SetActive(true)
	        Player.MahJong.SetCurrentState(operationState.HU)
		elseif v == "PAI_CHECK_RETURN_GANG" then
			_currentPanel.buttonList[_currentPanel.operationButton.gangButton].gameObject:SetActive(true)
	        _currentPanel.buttonList[_currentPanel.operationButton.pengButton].gameObject:SetActive(true)
	        _currentPanel.buttonList[_currentPanel.operationButton.guoButton].gameObject:SetActive(true)
	        Player.MahJong.SetCurrentState(operationState.GANG)
		elseif v == "PAI_CHECK_RETURN_PENG" then
			_currentPanel.buttonList[_currentPanel.operationButton.pengButton].gameObject:SetActive(true)
	        _currentPanel.buttonList[_currentPanel.operationButton.guoButton].gameObject:SetActive(true)
	        Player.MahJong.SetCurrentState(operationState.PENG)
		elseif v == "PAI_CHECK_RETURN_CHI" then
			_currentPanel.buttonList[_currentPanel.operationButton.guoButton].gameObject:SetActive(true)
			Player.MahJong.SetCurrentState(operationState.CHI)
			Player.MahJong.CheckChiPai()
		else
			print("PAI_CHECK_RETURN_NULL ")
			print(ClickEvent.MahJong.GetCurrentState())
		end
    end
    Player.MahJong.SetStateTable({})
end

function ClickEvent.ShowChiButton()
	-- body
	_currentPanel.buttonList[_currentPanel.operationButton.chiButton].gameObject:SetActive(true)
end

function ClickEvent.PopPanel( panelName )
	-- body
	local tempObj = CS.UnityEngine.Resources.Load("UIPrefab/"..panelName)
	_popPanel.panel = CS.UnityEngine.Object.Instantiate(tempObj,ClickEvent.self.transform)
	_popPanel.panel.transform.localScale = CS.UnityEngine.Vector3.one
	_popPanel.eventTriggerListener = _popPanel.panel:GetComponent("EventTriggerListener")
	_popPanel.eventTriggerListener.onClick = ClickEvent.registerButtonClick
	_popPanel.buttonList = _popPanel.eventTriggerListener._buttons
	_popPanel.toggleList = _popPanel.eventTriggerListener._toggles
end

function ClickEvent.DestroyPanel(gameObject)
	-- body
	CS.UnityEngine.Object.Destroy(gameObject)
	if _popPanel then
		_popPanel = {}
	else
		_currentPanel = {}
	end
end
---------------------------------------------------------------------------
-------------点击功能函数
---------------------------------------------------------------------------
function ClickEvent.PlayerID( gameObject )
	-- body
	Player._string_id = gameObject:GetComponent("InputField").text
end

function ClickEvent.PlayerPassword( gameObject )
	-- body
	Player._password = gameObject:GetComponent("InputField").text
end

function ClickEvent.LoginButton(gameObject)
	-- body
	local textShow = _currentPanel.panel:GetChild("Account"):GetChild("n1")
	Player._string_id = textShow.text
	Player.CmdLogin(Player._string_id)
end
function ClickEvent.Account( gameObject )
	-- body
	print(gameObject.name)
end

function ClickEvent.GuestLogin( gameObject )
	-- body
	--[[
	if _currentPanel.toggleList and _currentPanel.toggleList[0].isOn then
		ClickEvent.DestroyPanel(_currentPanel.panel)
		ClickEvent.CreateNewPanel(ClickEvent.panelTable._choose_ui)
	else
		print("no find toggle")
	end
	Player.CmdEnterGame(Player._id)
	--]]
	ClickEvent.DeletePanel(_currentPanel.panel)
	ClickEvent.CreateNewPanel(ClickEvent.panelTable._choose_ui)
	print("ClickEvent.GuestLogin")
end

function ClickEvent.Admit( gameObject )
	-- body
end

function ClickEvent.Back( ... )
	-- body
	ClickEvent.DeletePanel(_currentPanel.panel)
	ClickEvent.CreateNewPanel(ClickEvent.panelTable._main_ui)
end

function ClickEvent.PlayerLogo( ... )
	-- body
	print("playLogoShow")
	ClickEvent.PopPanel(ClickEvent.panelTable._player_message_ui)
	--_Player_Message_UI:SetActive(true)
end

function ClickEvent.DiamondPlus( ... )
	-- body
	print("DiamondPlusShow")
end

function ClickEvent.BeanPlus( ... )
	-- body
	print("BeanPlusShow")
end

function ClickEvent.TicketPlus( ... )
	-- body
	print("TicketPlusShow")
end

function ClickEvent.GoldZone( ... )
	-- body
	print("GoldZone")
end

function ClickEvent.JoinRoom( ... )
	-- body
	print("JoinRoom")
	ClickEvent.PopPanel(ClickEvent.panelTable._join_room_ui)
end

function ClickEvent.CreateRoom( ... )
	-- body
	print("CreateRoom")
	ClickEvent.PopPanel(ClickEvent.panelTable._create_room_ui)
	--CS.UnityEngine.Application.LoadLevel("PlaySence")
end

function ClickEvent.Store( ... )
	-- body
end

function ClickEvent.Option( ... )
	-- body
end

function ClickEvent.Mail( ... )
	-- body
end

function ClickEvent.Rank( ... )
	-- body
end

function ClickEvent.Activity( ... )
	-- body
end

function ClickEvent.Method( ... )
	-- body
end

function ClickEvent.Reward( ... )
	-- body
end

function ClickEvent.More( ... )
	-- body
end

function ClickEvent.ClosePanel( ... )
	-- body
	print("ClosePanel")
	ClickEvent.DestroyPanel(_popPanel.panel)
end

function ClickEvent.CreateRoomId( gameObject )
	-- body
	Player._roomId = tonumber(gameObject:GetComponent("InputField").text)
	print(gameObject.name)
end

function ClickEvent.CreatePersonalRoom( )
	-- body
	--roomid
	Player.CmdCreateRoom()
	ClickEvent.ClosePanel()
end

function ClickEvent.JoinRoomId( gameObject )
	-- body
	Player._roomId = tonumber(gameObject:GetComponent("InputField").text)
end

function ClickEvent.JoinFriendRoom( ... )
	-- body
	print(tonumber(Player._roomId))
	Player.CmdEnterRoom(Player._roomId)
	ClickEvent.ClosePanel()
end

-------------------------------------
---游戏中
---------------------------
function ClickEvent.StartGameButton( gameObject )
	-- body
	Player.CmdGameOperation()
	gameObject:SetActive(false)
end

function ClickEvent.GangClickButton(gameObject)
	-- body
	ClickEvent.CloseOperationPanel()
	Player.MahJong.GangPai()
end

function ClickEvent.ChiClickButton(gameObject)
	-- body
	ClickEvent.CloseOperationPanel()
	Player.MahJong.ChiPai()
end

function ClickEvent.PengClickButton(gameObject)
	-- body
	ClickEvent.CloseOperationPanel()
	Player.MahJong.PengPai()
end

function ClickEvent.HuClickButton(gameObject)
	-- body
	ClickEvent.CloseOperationPanel()
    Player.MahJong.HuPai()
end

function ClickEvent.GuoClickButton(gameObject)
	-- body
	ClickEvent.CloseOperationPanel()
	Player.MahJong.GuoPai()
end

function ClickEvent.CloseOperationPanel()
	-- body
	for k,v in pairs(_currentPanel.operationButton) do
		_currentPanel.buttonList[v].gameObject:SetActive(false)
	end
end

---------------------------------------------------------------------------
---------------------------------------------------------------------------
function ClickEvent.registerButtonClick(gameObject)
	-- body
	local key = gameObject.sender.name
	--[[
	switch = {
		
		["Reward"] = function ( ... )
			-- body
		end,
		["More"] = function ( ... )
			-- body
		end,
		["ClosePlayerMessagePanel"] = function ( ... )
			-- body
			_Player_Message_UI:SetActive(false)
		end,
	}
	--]]
	local fSwitch = ClickEvent[key]

	if fSwitch then
		local result = fSwitch(gameObject.sender)
	else
		print(key)
		print("key no found")
	end

end

return ClickEvent