local TouchCT = require "TouchCT"
local ClickEvent = require "ClickEvent"
local Player = require "Player"
local protobuf = require "protobuf"
--[[
local AssetManager = require "AssetManager"
	local loader = AssetManager.Load()
	print(loader)
	hoster = AssetManager.Get(196610)
	print(hoster)
	AssetManager.PrintMessage(hoster)
--]]
MahJong = {}
ClickEvent.MahJong = MahJong
Player.MahJong = MahJong
local newVector3 = CS.UnityEngine.Vector3
local Camera = CS.UnityEngine.Camera
local _mj_asset = {}
local _player_middle_pos
local _player_father = nil--player面前牌
local _pai_bigger = 1--player牌放大倍数
local _diceObj
local _gaiObj
local _pointFather = {}--牌池父节点
local _modelSize = {length = 0.0171,width = 0.02566,height = 0.036}
local _modelPool = {}
local _modelPoolLineCount = 36
local _startPosition = {}
local _startRotation = {}
local _myAnimation
local _animationName = {
	stepDown = "GaiDown",
	stepMiddle = "GaiPushMiddle",
	stepUp = "GaiUp",
}
local _animationState = ""
function start()
	-- body
	MahJong.Init()
	MahJong.AnimationPlay()
	MahJong.ModelPoolInit()
	MahJong.PlayerModelCameraPos()
	---[[
	MahJong.MjLoader()
	--]]
end

function MahJong.MjLoader()
	-- body
	local AssetManager = require "AssetManager"
	local resultPath = CS.LuaCommon.resultPath
	local loader = AssetManager.Load(resultPath.."Asset/Asset/")
	local message = AssetManager.GetMessagesByType("ASSET_TYPE_MJ_CARD")
	_mj_asset =  AssetManager.PrintDecodeMessage(message,"Adoter.Asset.MJCard")
	--[[
	AssetManager.PrintMessage(_mj_asset)
	for k, v in pairs(message) do  
    	print(v)
	end
	local data = AssetManager.Get(393238)
	local message = protobuf.decode("Adoter.Asset.CommonLimit", data)
	print(message.type_t)
	for k,v in pairs(data) do
		print(v)
	end
	--]]
end

function MahJong.PlayerModelCameraPos()
	-- body
	_player_middle_pos = Camera.main:ScreenToWorldPoint(newVector3(Camera.main.pixelWidth/2,Camera.main.pixelHeight/100,0.35))
end

function MahJong.Init()
	-- body
	_diceObj = self.transform:Find("Dice").gameObject
	_gaiObj = self.transform:Find("Gai").gameObject
	_pointFather.D = _gaiObj.transform:Find("Point_D/Father").gameObject
	_startPosition.D = newVector3(_modelSize.width/2 - _modelPoolLineCount*_modelSize.width/4,_modelSize.length/2,0)
	_startRotation.D = newVector3.zero
	_pointFather.N = _gaiObj.transform:Find("Point_N/Father").gameObject
	_startPosition.N = newVector3(0,_modelSize.length/2,_modelSize.width/2 - _modelPoolLineCount*_modelSize.width/4)
	_startRotation.N = newVector3(0,-90,0)
	_pointFather.X = _gaiObj.transform:Find("Point_X/Father").gameObject
	_startPosition.X = newVector3(-_modelSize.width/2 + _modelPoolLineCount*_modelSize.width/4,_modelSize.length/2,0)
	_startRotation.X = newVector3(0,-180,0)
	_pointFather.B = _gaiObj.transform:Find("Point_B/Father").gameObject
	_startPosition.B = newVector3(0,_modelSize.length/2,-_modelSize.width/2 + _modelPoolLineCount*_modelSize.width/4)
	_startRotation.B = newVector3(0,-270,0)
	_myAnimation = self:GetComponent("Animation")
	self:GetComponent("AnimationRegister").animationEvent = MahJong.AnimationPlay
end

function MahJong.ModelPoolInit()
	-- body
	local modelTemp = CS.UnityEngine.Resources.Load("MJModel/null_Model")
	local countTemp = 0
	for i=1,_modelPoolLineCount*4 do
		if i <= _modelPoolLineCount then
			_modelPool[i] = CS.UnityEngine.Object.Instantiate(modelTemp,_pointFather.D.transform)
			_modelPool[i].transform.localEulerAngles = _startRotation.D
			_modelPool[i].transform.localPosition = 
			_startPosition.D + 
			((i-1)%2)*newVector3(0,_modelSize.length,0) + 
			math.modf((i-1)/2)*newVector3(_modelSize.width,0,0)
		elseif i > _modelPoolLineCount and i <= _modelPoolLineCount*2 then
			_modelPool[i] = CS.UnityEngine.Object.Instantiate(modelTemp,_pointFather.N.transform)
			_modelPool[i].transform.localEulerAngles = _startRotation.N
			_modelPool[i].transform.localPosition = 
			_startPosition.N + 
			((i-_modelPoolLineCount)%2)*newVector3(0,_modelSize.length,0) + 
			math.modf((i-_modelPoolLineCount-1)/2)*newVector3(0,0,_modelSize.width)
		elseif i > _modelPoolLineCount*2 and i <= _modelPoolLineCount*3 then
			_modelPool[i] = CS.UnityEngine.Object.Instantiate(modelTemp,_pointFather.X.transform)
			_modelPool[i].transform.localEulerAngles = _startRotation.X
			_modelPool[i].transform.localPosition = 
			_startPosition.X + 
			((i-_modelPoolLineCount*2)%2)*newVector3(0,_modelSize.length,0) + 
			math.modf((i-_modelPoolLineCount*2-1)/2)*newVector3(-_modelSize.width,0,0)
		elseif i > _modelPoolLineCount*3 and i <= _modelPoolLineCount*4 then
			_modelPool[i] = CS.UnityEngine.Object.Instantiate(modelTemp,_pointFather.B.transform)
			_modelPool[i].transform.localEulerAngles = _startRotation.B
			_modelPool[i].transform.localPosition = 
			_startPosition.B + 
			((i-_modelPoolLineCount*3)%2)*newVector3(0,_modelSize.length,0) + 
			math.modf((i-_modelPoolLineCount*3-1)/2)*newVector3(0,0,-_modelSize.width)
		end

	end
	MahJong.ModelPoolSetActive(false)
	--print(i)
end

function MahJong.ModelPoolSetActive(bool)
	-- body
	for k, v in pairs(_pointFather) do  
    	v:SetActive(bool)
	end
end

function MahJong.CreatePlayerPai()
	-- body
	local paiCount = 0
	for k, v in pairs(Player._invoke_table.pais)do
        local tempPaiPool = {}
        for j,n in pairs(_mj_asset) do
        	if n.card_type == v.card_type then
        		tempPaiPool = n
        	end
        end
        for i, m in pairs(v.cards) do
        	paiCount = paiCount + 1
			MahJong.CreatePlayerModel(""..tempPaiPool.cards[m].model_path,""..paiCount)
        end
    end
	MahJong.SortPlayerPai()
end

function MahJong.CreatePlayerModel(modelName,paiNumber)
	-- body
	if not _player_father then
		_player_father = {}
		_player_father.cards = {}
		_player_father.father = CS.UnityEngine.GameObject("PlayerFather")
		_player_father.father.transform:SetParent(self.transform)
	end
	if type(modelName) == "string" then
		local modelTemp = CS.UnityEngine.Resources.Load("MJModel/"..modelName)
		
		_player_father.currentPaiNumber = paiNumber
		_player_father.cards[paiNumber] = {}
		_player_father.cards[paiNumber].parent = CS.UnityEngine.GameObject(modelName)
		_player_father.cards[paiNumber].parent.transform:SetParent(_player_father.father.transform)
		_player_father.cards[paiNumber].child = CS.UnityEngine.Object.Instantiate(modelTemp,_player_father.cards[paiNumber].parent.transform)
		_player_father.cards[paiNumber].child.transform.localEulerAngles = newVector3(-90,0,0)
		_player_father.cards[paiNumber].child.transform.localPosition = newVector3(0,_modelSize.height/2,0)
		_player_father.cards[paiNumber].parent.transform.localScale = _pai_bigger * newVector3.one
		--_player_father.cards[paiNumber].parent.transform.localPosition = _player_middle_pos
		_player_father.cards[paiNumber].parent.transform.localEulerAngles = newVector3(-45,0,0)
	else
		print("wrongType")
	end
end

function MahJong.SortPlayerPai()
	-- body
	for k,v in pairs(_player_father.cards) do
		--print(v)
		v.parent.transform.localPosition = _player_middle_pos +
		_pai_bigger*newVector3((_player_father.currentPaiNumber-1)*_modelSize.width/2 - _modelSize.width*(k-1),0,0)
	end
end

function MahJong.AnimationPlay()
	-- body
	switch = {
		[_animationName.stepDown] = function( ... )
			-- body
			MahJong.ModelPoolSetActive(true)
			_myAnimation:Play(_animationName.stepMiddle)
			_animationState = _animationName.stepMiddle
		end,
		[_animationName.stepMiddle] = function( ... )
			-- body
			_myAnimation:Play(_animationName.stepUp)
			_animationState = _animationName.stepUp
		end,
		[_animationName.stepUp] = function( ... )
			-- body
			_animationState = ""
			print("startGame")
		end,
	}
	local fSwitch = switch[_animationState]

	if fSwitch then
		local result = fSwitch()
	else
		_myAnimation:Play("GaiDown")
		_animationState = _animationName.stepDown
		--print("key no found")
	end
end

--local _rotate_speed = 2000
function update()
	-- body
	--local speed = CS.UnityEngine.Vector3.up * CS.UnityEngine.Time.deltaTime * _rotate_speed
	--_dice_obj.transform:Rotate(speed)
end
return MahJong