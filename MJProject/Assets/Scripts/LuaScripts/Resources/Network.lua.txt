local protobuf = require "protobuf"
--local FLibEvent = require "FLibEvent"
--Player = require "Player"

--local DataCsv = io.readfile(cc.FileUtils:getInstance():fullPathForFilename("P_Protocol.pb"))
--local _addr = io.open("Assets/Scripts/LuaScripts/Resources/google/protobuf/".."descriptor.pb","rb")
local resultPath = CS.LuaCommon.resultPath
local _addr = io.open(resultPath.."google/protobuf/".."descriptor.pb","rb")
local _buffer = _addr:read "*a"
_addr:close()
protobuf.register(_buffer)
---[[
_addr = io.open(resultPath.."P_Asset.pb","rb")
_buffer = _addr:read "*a"
_addr:close()
protobuf.register(_buffer)
---[[
_addr = io.open(resultPath.."P_Protocol.pb","rb")
_buffer = _addr:read "*a"
_addr:close()
protobuf.register(_buffer)--]]

Network = {}
local this = Network
local _socketClientClass = CS.MX.SocketClient
--local _byteBufferClass = CS.MX.ByteBuffer
local _socketClient = _socketClientClass()

---------------------------------------------------------------------------
--初始化
---------------------------------------------------------------------------
function Network.Start()
    _socketClient:OnRegister()
    --_socketClient:StartClient()
    this.AddEventListener()
end

function Network.AddEventListener()
    --FLibEvent.AddEvent(Player.LoadScene,"META_TYPE_C2S_ENTER_GAME")
    --FLibEvent.AddEvent(Player.LoadScene,"META_TYPE_C2S_BEGIN")
    FLibEvent.AddEvent(Player.OnCreatePlayer,"META_TYPE_SHARE_CREATE_PLAYER")
    FLibEvent.AddEvent(Player.OnCreateRoom,"META_TYPE_SHARE_CREATE_ROOM")
    FLibEvent.AddEvent(Player.OnGameOperation,"META_TYPE_SHARE_GAME_OPERATION")
    FLibEvent.AddEvent(Player.OnEnterRoom,"META_TYPE_SHARE_ENTER_ROOM")
    FLibEvent.AddEvent(Player.OnPaiOperation,"META_TYPE_SHARE_PAI_OPERATION")
    
    FLibEvent.AddEvent(Player.OnPaiNotify, "META_TYPE_S2C_PAI_NOTIFY")
    FLibEvent.AddEvent(Player.OnCommonOperation,"META_TYPE_S2C_COMMON_OPERATION_RESPONSE")
    FLibEvent.AddEvent(Player.OnAlterError,"META_TYPE_S2C_ALTER_ERROR")
    FLibEvent.AddEvent(Player.OnPaiOperationAlert,"META_TYPE_S2C_PAI_OPERATION_ALERT")
    FLibEvent.AddEvent(Player.OnPlayerList,"META_TYPE_S2C_PLAYERS")
    FLibEvent.AddEvent(Player.OnPlayerInformation,"META_TYPE_S2C_PLAYER_INFO")
    FLibEvent.AddEvent(Player.OnRoomInformation,"META_TYPE_S2C_ROOM_INFO")
    FLibEvent.AddEvent(Player.OnAlertMessage,"META_TYPE_S2C_ALERT_ERROR")
    FLibEvent.AddEvent(Player.OnSyncCommonReward,"META_TYPE_S2C_COMMON_REWARD")
    FLibEvent.AddEvent(Player.OnGameCalculate,"META_TYPE_S2C_GAME_CALCULATE")
end

---------------------------------------------------------------------------
--连接服务器
---------------------------------------------------------------------------
function Network.ConnetServer()
    _socketClient:SendConnect()
    print("Server Connect----->>>")
end

---------------------------------------------------------------------------
--发送协议
---------------------------------------------------------------------------
function Network.SendProtocol(messageName, message)
    local meta = {}

    local message_stuff = protobuf.encode("Adoter.Asset." .. messageName, message)
    meta.stuff = message_stuff

    local type_key = protobuf.decode("Adoter.Asset." .. messageName, message_stuff)
    meta.type_t = type_key.type_t
    
    ---------------------------------------------
    local msg = protobuf.encode("Adoter.Asset.Meta",meta)

    _socketClient:SendProtocol(msg)
    --]]
end

---------------------------------------------------------------------------
function Network.OnConnet()
	print("ConnetServer Success----->>>")
    --Player.CmdCreatePlayer()
    --Player.CmdEnterGame(347)
end

function Network.OnClose()
	print("Server Close----->>>")
    this.DelEventListener()
end

function Network.DelEventListener()
    --FLibEvent.DelEvent(Player.LoadScene,"META_TYPE_C2S_ENTER_GAME")
    FLibEvent.DelEvent(Player.OnCreatePlayer,"META_TYPE_SHARE_CREATE_PLAYER")
    FLibEvent.DelEvent(Player.OnCreateRoom,"META_TYPE_SHARE_CREATE_ROOM")
    FLibEvent.DelEvent(Player.OnGameOperation,"META_TYPE_SHARE_GAME_OPERATION")
    FLibEvent.DelEvent(Player.OnPaiOperation,"META_TYPE_SHARE_PAI_OPERATION")

    FLibEvent.DelEvent(Player.OnPaiNotify, "META_TYPE_S2C_PAI_NOTIFY")
    FLibEvent.DelEvent(Player.OnCommonOperation,"META_TYPE_S2C_COMMON_OPERATION_RESPONSE")
    FLibEvent.DelEvent(Player.OnAlterError,"META_TYPE_S2C_ALTER_ERROR")
    FLibEvent.DelEvent(Player.OnPaiOperationAlert,"META_TYPE_S2C_PAI_OPERATION_ALERT")
    FLibEvent.DelEvent(Player.OnPlayerList,"META_TYPE_S2C_PLAYERS")
    FLibEvent.DelEvent(Player.OnEnterRoom,"META_TYPE_SHARE_ENTER_ROOM")
    FLibEvent.DelEvent(Player.OnPlayerInformation,"META_TYPE_S2C_PLAYER_INFO")
    FLibEvent.DelEvent(Player.OnRoomInformation,"META_TYPE_S2C_ROOM_INFO")
    FLibEvent.DelEvent(Player.OnAlertMessage,"META_TYPE_S2C_ALERT_ERROR")
    FLibEvent.DelEvent(Player.OnSyncCommonReward,"META_TYPE_S2C_COMMON_REWARD")
    FLibEvent.DelEvent(Player.OnGameCalculate,"META_TYPE_S2C_GAME_CALCULATE")
end

---------------------------------------------------------------------------
--异常断线
---------------------------------------------------------------------------
function Network.OnException() 
end
---------------------------------------------------------------------------
--连接中断，或者被踢掉
---------------------------------------------------------------------------
function Network.OnDisconnect() 
    print("OnDisconnect------->>>")
    Player.ThreadFunction(ClickEvent.showDisconnect)
end

function Network.OnReceived(buffer)
	print("OnReceived------>>>")
    if not buffer then return 1 end

    local data = buffer:ReadBytes()

    --buffer:Close()
    --local meta = P_Protocol.Meta()
    --meta:ParseFromString(data)
    ----------------------------------------------------
    local meta = nil
    if data then
        meta = protobuf.decode("Adoter.Asset.Meta" , data)
    end
    ---[[
    if type(meta) ~= "table" then
        print(type(meta))
        return 0
    end
    if not meta.type_t then
        print("148,type is nil")
        return 0
    end
    --]]
    print(type(meta))
    print('OnSocket:type_t:>'..(meta.type_t))
    print("ddddddddddd"..meta.stuff)
    ----------------------------------------------------
    if meta then
        FLibEvent.Fire(meta.type_t, meta.stuff)
        --print("Fire Success")
    end
    return 0
end


return Network
