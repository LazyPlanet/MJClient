local protobuf = require "protobuf"
FLibEvent = require "FLibEvent"
Player = require "Player"

--local DataCsv = io.readfile(cc.FileUtils:getInstance():fullPathForFilename("P_Protocol.pb"))
_addr = io.open("Assets/Scripts/LuaScripts/Resources/google/protobuf/".."descriptor.pb","rb")
_buffer = _addr:read "*a"
_addr:close()
protobuf.register(_buffer)
---[[
_addr = io.open("Assets/Scripts/LuaScripts/Resources/".."P_Asset.pb","rb")
_buffer = _addr:read "*a"
_addr:close()
protobuf.register(_buffer)
---[[
_addr = io.open("Assets/Scripts/LuaScripts/Resources/".."P_Protocol.pb","rb")
_buffer = _addr:read "*a"
_addr:close()
protobuf.register(_buffer)--]]

Network = {}
local this = Network
local _socketClientClass = CS.MX.SocketClient
local _socketClient = _socketClientClass()

---------------------------------------------------------------------------
--初始化
---------------------------------------------------------------------------
function Network.Start()
    _socketClient:OnRegister()
    this.AddEventListener()
end

function Network.AddEventListener()
    --FLibEvent.AddEvent(Player.LoadScene,"META_TYPE_C2S_ENTER_GAME")
    --FLibEvent.AddEvent(Player.LoadScene,"META_TYPE_C2S_BEGIN")
end

---------------------------------------------------------------------------
--连接服务器
---------------------------------------------------------------------------
function Network.ConnetServer()
    --_socket = SocketClient()
    _socketClient:SendConnect()
    print("Server Connect----->>>")
end

---------------------------------------------------------------------------
--发送协议
---------------------------------------------------------------------------
function Network.SendProtocol(table_name, message)
    local meta = {}

    local message_stuff = protobuf.encode("Adoter.Asset." .. table_name, message)
    meta.stuff = message_stuff

    local type_key = protobuf.decode("Adoter.Asset." .. table_name, message_stuff)
    meta.type_t = type_key.type_t

    ---------------------------------------------
    local msg = protobuf.encode("Adoter.Asset.Meta",meta)
    _socketClient:SendProtocol(msg)
    --]]
end
---------------------------------------------------------------------------
--数据封装
---------------------------------------------------------------------------

function Network.CmdCreatePlayer()
    -- body
    local CreatePlayer = {}
    this.SendProtocol("CreatePlayer",CreatePlayer)
end

function Network.CmdLogin(name,pass_word)
    -- body
    local Login = {
        account = {
            username = name,--""
            password = pass_word,--""
        }
        this.SendProtocol("Login",Login)
    }
end

function Network.CmdEnterGame(id)
    -- body
    local EnterGame = {
        player_id = id,
    }
    this.SendProtocol("EnterGame",EnterGame)
end

function Network.CmdCreteRoom(id,name,pass_word)
    -- body
    local CreatRoom ={
        room = {
            room_id = id,--1,
            room_name = name,--"123",
            enter_password  = pass_word,--"123",
        }
    }
    this.SendProtocol("CreatRoom",CreatRoom)
end

function Network.CmdEnterRoom(id,pass_word)
    -- body
    local EnterRoom = {
        room_id = id,--2;
        enter_password = pass_word,--"123";
    }
    this.SendProtocol("EnterRoom",EnterRoom)
end
---------------------------------------------------------------------------
function Network.OnConnet()
	print("ConnetServer Success----->>>")
	
    local EnterGame ={
            player_id = 100,
        }

    this.SendProtocol("EnterGame",EnterGame)
end

function Network.OnClose()
	print("Server Close----->>>")
    this.DelEventListener()
end

function Network.DelEventListener()
    --FLibEvent.DelEvent(Player.LoadScene,"META_TYPE_C2S_ENTER_GAME")
end

---------------------------------------------------------------------------
--异常断线
---------------------------------------------------------------------------
function Network.OnException() 
end
---------------------------------------------------------------------------
--连接中断，或者被踢掉
---------------------------------------------------------------------------
function Network.OnDisconnect() 
    print("OnDisconnect------->>>")
end

function Network.OnReceived(buffer)
	print("OnReceived------>>>")
    if not buffer then return 1 end

    local data = buffer--:ReadBuffer()
    ----------------------------------------------------
    local meta = protobuf.decode("Adoter.Asset.Meta" , data)

   --[[
    print('OnSocket:type_t:>'..meta.type_t)
    print(type(meta.stuff))
    print("ddddddddddd"..meta.stuff)
    --]]
    ----------------------------------------------------
    FLibEvent.Fire(meta.type_t, meta.stuff)
    return 0
end


return Network
